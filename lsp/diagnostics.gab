log = 'lsp/logs'.use

'cgab'.use

diag\job\t = Shapes.make(server: uri: text:)

[diag\job\t] .defmodule {
  notify\diagnostics: diagnostics => do
    self.server.log("Notifying", self.uri, diagnostics)

    self.server.notify(
        "textDocument/publishDiagnostics"
        {
          "uri" self.uri
          "diagnostics" diagnostics
        })

    ok:
  end
  diag\check: () => do
    text = self.text

    (ok, err) = text.as\gab\block

    (ok == ok:!) .and err .or nil:
  end
  diag\complete: () => do
    job = self
    self.server.log("Diagnostics for: " self.uri)
    diagnostic = self.diag\check

    diagnostic
      .then(() => do
        job.notify\diagnostics [
            {
              'range' {
                'start' {
                  'line' diagnostic.row - 1
                  'character' diagnostic.col\begin
                }
                'end' {
                  'line' diagnostic.row - 1
                  'character' diagnostic.col\end
                }
              }
              'severity' 1
              'code' "test"
              'codeDescription' "This is a test"
              'source' "gablsp"
              'message' diagnostic.status
            }
          ]
      end)
    .else(() => do
      job.server.log("Clearing diagnostics: " diagnostic)
      job.notify\diagnostics []
    end)
  end
}
